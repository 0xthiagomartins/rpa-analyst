"""Formul√°rio de identifica√ß√£o do processo."""
import streamlit as st
from typing import Optional, Dict
from src.utils.logger import Logger
from .form_base import SuggestibleForm

class IdentificationForm(SuggestibleForm):
    """Formul√°rio de identifica√ß√£o do processo."""
    
    def __init__(self):
        """Inicializa o formul√°rio."""
        super().__init__("identification")
        self.logger = Logger()

    async def render(self):
        """Renderiza o formul√°rio."""
        st.write("### üéØ Identifica√ß√£o do Processo")
        
        # Campos do formul√°rio
        name = st.text_input(
            "Nome do Processo",
            value=st.session_state.get("process_name", ""),
            help="Nome do processo a ser automatizado"
        )
        
        responsible = st.text_input(
            "Respons√°vel",
            value=st.session_state.get("responsible", ""),
            help="Respons√°vel pelo processo"
        )
        
        area = st.text_input(
            "√Årea",
            value=st.session_state.get("area", ""),
            help="√Årea/departamento do processo"
        )
        
        description = st.text_area(
            "Descri√ß√£o do Processo",
            value=st.session_state.get("description", ""),
            help="Descreva o processo em detalhes"
        )
        
        # Atualiza session_state
        st.session_state.update({
            'process_name': name,
            'responsible': responsible,
            'area': area,
            'description': description
        })
        
        # Bot√£o de sugest√µes e preview
        if description:
            st.write("---")
            try:
                # Bot√£o de gerar sugest√µes
                col1, col2 = st.columns([1, 3])
                with col1:
                    if st.button(
                        "ü§ñ Gerar Sugest√µes",
                        use_container_width=True,
                        key="btn_suggestions"
                    ):
                        st.session_state.requesting_suggestions = True
                
                # Processa sugest√µes se solicitado
                if getattr(st.session_state, 'requesting_suggestions', False):
                    with st.spinner("Gerando sugest√µes..."):
                        await self.suggestions_manager.request_suggestions(
                            description=description,
                            current_data=st.session_state.get('process_data')
                        )
                    st.session_state.requesting_suggestions = False
                    st.rerun()
                
                # Renderiza preview de sugest√µes
                self.render_suggestions()
                
            except Exception as e:
                self.logger.error(f"Erro ao processar sugest√µes: {str(e)}")
                st.error("N√£o foi poss√≠vel gerar sugest√µes. Tente novamente.") 